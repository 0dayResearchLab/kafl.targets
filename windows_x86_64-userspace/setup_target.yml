- name: Setup target
  hosts: all
  vars:
    vcvars_path: "{{ ansible_env['ProgramFiles(x86)'] }}\\Microsoft Visual Studio\\2017\\BuildTools\\VC\\Auxiliary\\Build\\vcvars64.bat"
    dest_path: "{{ ansible_env.USERPROFILE }}\\Desktop"
    wdk_include_km_path: "C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.17763.0\\km"
    wdk_lib_path: "C:\\Program Files (x86)\\Windows Kits\\10\\Lib\\10.0.17763.0\\km\\x64"
    ntoskrnllib_path: "C:\\Program Files (x86)\\Windows Kits\\10\\Lib\\10.0.17763.0\\km\\x64\\ntoskrnl.lib"
    binary_path_name: "{{ dest_path }}\\driver\\vuln_driver.sys"
    test_userspace: "{{ ansible_env.USERPROFILE }}\\Desktop\\bin\\userspace\\selffuzz_test.exe"
  tasks:
    - name: Set default value for target_harness
      set_fact:
        target_harness: 'userspace'
      when: target_harness is undefined

    - name: Upload binaries
      win_copy:
        src: bin
        dest: "{{ dest_path }}"

    - name: Setup userspace harness target
      block:
        - name: Setup userspace target to run at user login
          win_shortcut:
            src: "{{ ansible_env.USERPROFILE }}\\Desktop\\bin\\userspace\\selffuzz_test.exe"
            dest: "{{ ansible_env.APPDATA }}\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\kafl_target.lnk"
      when: target_harness == 'userspace'

    - name: Setup driver harness target
      block:
        # - name: Disable driver signature enforcement
        #   win_command: bcdedit /set testsigning on

        # - name: disable stuff
        #   win_command: bcdedit /set nointegritychecks on

        # - name: reboot
        #   win_reboot:

        - name: Upload vuln driver sources
          win_copy:
            src: src/driver
            dest: "{{ dest_path }}"

        # driver needs to be compiled by MSVC
        - name: Write compile script
          win_copy:
            dest: "{{ dest_path }}\\driver\\compile.bat"
            content: |
              {{ vcvars_path | ansible.windows.quote }} && cl /c driver.c /D _AMD64_ && link driver.obj /out:vuln_driver.sys /subsystem:native /entry:DriverEntry {{ ntoskrnllib_path | ansible.windows.quote }}

        - name: Compile driver with MSVC
          win_command: "compile.bat"
          args:
            chdir: "{{ dest_path }}\\driver"
          environment:
            INCLUDE: "{{ wdk_include_km_path }}"
            LIB: "{{ wdk_lib_path }}"

        # win_service cannot create kernel level services
        - name: Set service to start vuln_driver.sys at boot
          # win_shell: |
          #   $params = @{
          #     Name = "kafl_driver"
          #     BinaryPathName = "C:\\Windows\\System32\\cmd.exe"
          #     DisplayName = "kAFL driver"
          #     StartupType = "Automatic"
          #     ServiceType = "KernelDriver"
          #     Description = "Example of kAFL vulnerable driver"
          #   }
          #   New-Service @params
#           win_command: "New-Service -Name vuln_driver -BinaryFilePathName {{ dest_path + '/driver/vuln_driver.sys' | ansible.windows.quote }} -Description 'Vulnerable kAFL driver' -StartupType Auto -ServiceType KernelDriver
# "
          win_command: "sc create vuln_driver binPath= {{ binary_path_name | ansible.windows.quote }} type= kernel start= auto"
          register: result
          failed_when:
            - result.rc != 0
            - result.rc != 1073 # service already exists

        # - name: Set service to start vuln_test to trigger the driver
        #   win_service:
        #     name: vuln_driver_trigger
        #     path: "{{ dest_path }}\\bin\\driver\\vuln_test.exe"
        #     start_mode: auto
        #     dependencies: ["vuln_driver"]
      when: target_harness == 'driver'
